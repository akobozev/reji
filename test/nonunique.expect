#!/usr/bin/expect

proc assert {exp_string} {
	expect {
		timeout {
			puts "Failed\r"
			exit 1
		}
		$exp_string
	}
	expect "> "
}

set timeout 1
spawn redis-cli

expect "> "
send "flushdb\r"
assert "OK"

puts "Creating unique index..."
send "reji.create \"{\\\"name\\\": \\\"nuidx\\\", \\\"columns\\\": \[\\\"author\\\"\]}\"\r"
assert "(empty list or set)"

puts "Adding records..."
send "reji.put \"book1\" \"{\\\"author\\\": \\\"Corets, Eva\\\", \\\"name\\\": \\\"XML Dev Guide\\\", \\\"price\\\": \\\"49.95\\\"}\"\r"
assert "OK"

send "reji.put \"book2\" \"{\\\"author\\\": \\\"Corets, Eva\\\", \\\"name\\\": \\\"Midnight Rain\\\", \\\"price\\\": \\\"5.95\\\"}\"\r"
assert "OK"

send "reji.put \"book3\" \"{\\\"author\\\": \\\"Corets, Eva\\\", \\\"name\\\": \\\"Maeve Ascendant\\\", \\\"price\\\": \\\"15.99\\\"}\"\r"
assert "OK"

puts "Get record by index key..."
send "reji.get nuidx author \"Corets, Eva\"\r"
expect {
	timeout {
		puts "Failed\r"
		exit 1
	}
	"4\)" {
		puts "Failed\r"
		exit 1
	}
	"XML Dev Guide" {}
	"Midnight Rain" {}
	"Maeve Ascendant" {}
}
expect "> "

puts "Get keys by index key..."
send "reji.keys nuidx author \"Corets, Eva\"\r"
expect {
	timeout {
		puts "Failed\r"
		exit 1
	}
	"4\)" {
		puts "Failed\r"
		exit 1
	}
	"book1" {}
	"book2" {}
	"book3" {}
}
expect "> "

puts "Test record update..."
send "reji.put \"book3\" \"{\\\"author\\\": \\\"Corets, Eva\\\", \\\"name\\\": \\\"Maeve Ascendant - Updated\\\", \\\"price\\\": \\\"17.99\\\"}\"\r"
assert "OK"

puts "Get updated record by index key..."
send "reji.get nuidx author \"Corets, Eva\"\r"
expect {
	timeout {
		puts "Failed\r"
		exit 1
	}
	"4\)" {
		puts "Failed\r"
		exit 1
	}
	"XML Dev Guide" {}
	"Midnight Rain" {}
	"Maeve Ascendant - Updated" {}
}
expect "> "

puts "Test record update of the index key..."
send "reji.put \"book3\" \"{\\\"author\\\": \\\"Corets, Eva - Updated\\\", \\\"name\\\": \\\"Maeve Ascendant - Updated\\\", \\\"price\\\": \\\"17.99\\\"}\"\r"
assert "OK"

puts "Get updated record by index key..."
send "reji.get nuidx author \"Corets, Eva\"\r"
expect {
	timeout {
		puts "Failed\r"
		exit 1
	}
	"3\)" {
		puts "Failed\r"
		exit 1
	}
	"XML Dev Guide" {}
	"Midnight Rain" {}
}
expect "> "

puts "Get updated record by index new key..."
send "reji.get nuidx author \"Corets, Eva \- Updated\"\r"

sleep 1

expect {
	timeout {
		puts "Failed\r"
		exit 1
	}
	"2\)" {
		puts "Failed\r"
		exit 1
	}
	"1\)" {}
	"Corets, Eva - Updated" {}
}
expect "> "

puts "Dropping index..."
send "reji.drop nuidx\r"
assert "OK"

puts "Done."
